version: 2.1

# Common executor configuration
executors:
  clojure:
    docker:
      - image: cimg/clojure:1.11-openjdk-11.0
    working_directory: ~/repo


# Reusable job steps
commands:
  install-vault:
    description: "Install the Vault CLI"
    steps:
      - run:
          name: Install vault
          environment:
            VAULT_VERSION: 1.11.4
          command: |
            wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
            unzip vault_${VAULT_VERSION}_linux_amd64.zip
            sudo mv vault /usr/local/bin/vault


# Job definitions
jobs:
  style:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install cljstyle
          environment:
            CLJSTYLE_VERSION: 0.15.0
          command: |
            wget https://github.com/greglook/cljstyle/releases/download/${CLJSTYLE_VERSION}/cljstyle_${CLJSTYLE_VERSION}_linux.zip
            unzip cljstyle_${CLJSTYLE_VERSION}_linux.zip
      - run:
          name: Check source formatting
          command: "./cljstyle check --report"

  lint:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install clj-kondo
          environment:
            CLJ_KONDO_VERSION: 2022.11.02
          command: |
            wget https://github.com/clj-kondo/clj-kondo/releases/download/v${CLJ_KONDO_VERSION}/clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
            unzip clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
      - run:
          name: Lint source code
          command: "./clj-kondo --lint src test"

  test:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-test-{{ checksum "project.clj" }}
            - v1-test-
      - run: lein deps
      - save_cache:
          key: v1-test-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
      - run: lein check
      - run: lein test

  integration:
    executor: clojure
    steps:
      - checkout
      - install-vault
      - restore_cache:
          keys:
            - v1-test-{{ checksum "project.clj" }}
            - v1-test-
      - run: lein test :integration

  coverage:
    executor: clojure
    steps:
      - checkout
      - install-vault
      - restore_cache:
          keys:
            - v1-coverage-{{ checksum "project.clj" }}
            - v1-coverage-
            - v1-test-
      - run:
          name: Generate test coverage
          command: lein with-profile +test cloverage --codecov
      - save_cache:
          paths:
            - ~/.m2
          key: v1-coverage-{{ checksum "project.clj" }}
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - run:
          name: Install codecov
          command: |
            sudo apt-get update && sudo apt-get install gpg
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x codecov
      - run:
          name: Publish coverage report
          command: './codecov -f target/coverage/codecov.json'

  auth-ldap:
    docker:
      - image: cimg/clojure:1.11-openjdk-11.0
      - image: osixia/openldap:1.4.0
        environment:
          LDAP_DOMAIN: test.com
          LDAP_ORGANISATION: vault-clj
          LDAP_ADMIN_PASSWORD: ldap-admin
    working_directory: ~/repo
    steps:
      - checkout
      - install-vault
      - run:
          name: Install LDAP utils
          command: sudo apt-get update && sudo apt-get install -y ldap-utils
      - run:
          name: Configure LDAP server
          command: |
            while ! nc -vz localhost 389 2>/dev/null; do sleep 1; done
            ldapadd -cxD "cn=admin,dc=test,dc=com" -w ldap-admin -f docker/ldap/sample-organization.ldif
      - restore_cache:
          keys:
            - v1-test-{{ checksum "project.clj" }}
            - v1-test-
      - run:
          name: Test LDAP auth
          command: lein test :only vault.auth.ldap-test
          environment:
            VAULT_LDAP_DOMAIN: dc=test,dc=com
            VAULT_LDAP_ADMIN_PASS: ldap-admin
            VAULT_LDAP_LOGIN_USER: alice
            VAULT_LDAP_LOGIN_PASS: hunter2

  secret-database:
    docker:
      - image: cimg/clojure:1.11-openjdk-11.0
      - image: cimg/postgres:14.5
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: hunter2
    working_directory: ~/repo
    steps:
      - checkout
      - install-vault
      - restore_cache:
          keys:
            - v1-test-{{ checksum "project.clj" }}
            - v1-test-


# Workflow definitions
workflows:
  version: 2
  test:
    jobs:
      - style
      - lint
      - test
      - integration
      - coverage:
          requires:
            - test
            - integration
      - auth-ldap:
          requires:
            - test
      - secret-database:
          requires:
            - test
